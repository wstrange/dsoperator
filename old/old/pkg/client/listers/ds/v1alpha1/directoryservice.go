// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/ForgeRock/dsoperator/pkg/apis/ds/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DirectoryServiceLister helps list DirectoryServices.
type DirectoryServiceLister interface {
	// List lists all DirectoryServices in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DirectoryService, err error)
	// DirectoryServices returns an object that can list and get DirectoryServices.
	DirectoryServices(namespace string) DirectoryServiceNamespaceLister
	DirectoryServiceListerExpansion
}

// directoryServiceLister implements the DirectoryServiceLister interface.
type directoryServiceLister struct {
	indexer cache.Indexer
}

// NewDirectoryServiceLister returns a new DirectoryServiceLister.
func NewDirectoryServiceLister(indexer cache.Indexer) DirectoryServiceLister {
	return &directoryServiceLister{indexer: indexer}
}

// List lists all DirectoryServices in the indexer.
func (s *directoryServiceLister) List(selector labels.Selector) (ret []*v1alpha1.DirectoryService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DirectoryService))
	})
	return ret, err
}

// DirectoryServices returns an object that can list and get DirectoryServices.
func (s *directoryServiceLister) DirectoryServices(namespace string) DirectoryServiceNamespaceLister {
	return directoryServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DirectoryServiceNamespaceLister helps list and get DirectoryServices.
type DirectoryServiceNamespaceLister interface {
	// List lists all DirectoryServices in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DirectoryService, err error)
	// Get retrieves the DirectoryService from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DirectoryService, error)
	DirectoryServiceNamespaceListerExpansion
}

// directoryServiceNamespaceLister implements the DirectoryServiceNamespaceLister
// interface.
type directoryServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DirectoryServices in the indexer for a given namespace.
func (s directoryServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DirectoryService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DirectoryService))
	})
	return ret, err
}

// Get retrieves the DirectoryService from the indexer for a given namespace and name.
func (s directoryServiceNamespaceLister) Get(name string) (*v1alpha1.DirectoryService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("directoryservice"), name)
	}
	return obj.(*v1alpha1.DirectoryService), nil
}
